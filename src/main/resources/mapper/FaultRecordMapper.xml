<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hqu.elevatorManage.mapper.FaultRecordMapper">

    <resultMap id="BaseResultMap" type="org.hqu.elevatorManage.domain.vo.FaultRecordVO">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="recordId" column="record_id" jdbcType="VARCHAR"/>
        <result property="elevatorId" column="elevator_id" jdbcType="VARCHAR"/>
        <result property="elevatorName" column="elevator_id" jdbcType="INTEGER"/>
        <result property="registrationCode" column="registration_code" jdbcType="INTEGER"/>
        <result property="installPosition" column="install_position" jdbcType="INTEGER"/>
        <result property="terminalId" column="terminal_id" jdbcType="VARCHAR"/>
        <result property="companyId" column="company_id" jdbcType="INTEGER"/>
        <result property="companyName" column="company_name" jdbcType="VARCHAR"/>
        <result property="groupId" column="group_id" jdbcType="INTEGER"/>
        <result property="groupName" column="group_name" jdbcType="VARCHAR"/>
        <result property="floor" column="floor" jdbcType="VARCHAR"/>
        <result property="occurTime" column="occur_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        fr.id, fr.record_id, fr.elevator_id, fr.terminal_id, fr.company_id, fr.company_name, fr.group_id, fr.group_name, fr.floor, fr.occur_time, fr.end_time, fr.type, fr.state
    </sql>
    <sql id="Ext_Column_List">
        ,e.name AS elevator_name,e.registration_code,e.install_position
    </sql>
    
    <select id="listFaultRecords" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        <include refid="Ext_Column_List"/>
        FROM fault_record AS fr
        JOIN elevator AS e ON e.elevator_id = fr.elevator_id
        <where>
            <if test="id != null">
                AND fr.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="recordId != null">
                AND record_id = #{recordId,jdbcType=VARCHAR}
            </if>
            <if test="elevatorId != null">
                AND fr.elevator_id = #{elevatorId,jdbcType=VARCHAR}
            </if>
            <if test="terminalId != null">
                AND fr.terminal_id = #{terminalId,jdbcType=VARCHAR}
            </if>
            <if test="companyId != null">
                AND company_id = #{companyId,jdbcType=VARCHAR}
            </if>
            <if test="companyName != null">
                AND company_name = #{companyName,jdbcType=VARCHAR}
            </if>
            <if test="groupId != null">
                AND group_id = #{groupId,jdbcType=VARCHAR}
            </if>
            <if test="groupName != null">
                AND group_name = #{groupName,jdbcType=VARCHAR}
            </if>
            <if test="floor != null">
                AND floor = #{floor,jdbcType=VARCHAR}
            </if>
            <if test="occurTime != null">
                AND occur_time = #{occurTime,jdbcType=TIMESTAMP}
            </if>
            <if test="occurStartTime != null and occurEndTime != null">
                AND occur_time &gt; #{occurStartTime,jdbcType=TIMESTAMP}
                AND occur_time &lt; #{occurEndTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null">
                AND end_time = #{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="type != null">
                AND fr.type = #{type,jdbcType=VARCHAR}
            </if>
            <if test="state != null">
                AND fr.state = #{state,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <insert id="addFaultRecord" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO fault_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="recordId != null">record_id,</if>
            <if test="elevatorId != null">elevator_id,</if>
            <if test="terminalId != null">terminal_id,</if>
            <if test="companyId != null">company_id,</if>
            <if test="companyName != null">company_name,</if>
            <if test="groupId != null">group_id,</if>
            <if test="groupName != null">group_name,</if>
            <if test="floor != null">floor,</if>
            <if test="occurTime != null">occur_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="type != null">type,</if>
            <if test="state != null">state,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
           <if test="id != null">
               #{id,jdbcType=INTEGER},
           </if>
           <if test="recordId != null">
               #{recordId,jdbcType=VARCHAR},
           </if>
           <if test="elevatorId != null">
               #{elevatorId,jdbcType=VARCHAR},
           </if>
           <if test="terminalId != null">
               #{terminalId,jdbcType=VARCHAR},
           </if>
           <if test="companyId != null">
               #{companyId,jdbcType=VARCHAR},
           </if>
           <if test="companyName != null">
               #{companyName,jdbcType=VARCHAR},
           </if>
           <if test="groupId != null">
               #{groupId,jdbcType=VARCHAR},
           </if>
           <if test="groupName != null">
               #{groupName,jdbcType=VARCHAR},
           </if>
           <if test="floor != null">
               #{floor,jdbcType=VARCHAR},
           </if>
           <if test="occurTime != null">
               #{occurTime,jdbcType=TIMESTAMP},
           </if>
           <if test="endTime != null">
               #{endTime,jdbcType=TIMESTAMP},
           </if>
           <if test="type != null">
               #{type,jdbcType=VARCHAR},
           </if>
           <if test="state != null">
               #{state,jdbcType=INTEGER},
           </if>
        </trim>
    </insert>

    <update id="updateFaultRecord">
        UPDATE fault_record
        <set>
            <if test="recordId != null and recordId != ''">
                record_id = #{recordId,jdbcType=VARCHAR},
            </if>
            <if test="elevatorId != null and elevatorId != ''">
                elevator_id = #{elevatorId,jdbcType=VARCHAR},
            </if>
            <if test="terminalId != null and terminalId != ''">
                terminal_id = #{terminalId,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="floor != null and floor != ''">
                floor = #{floor,jdbcType=VARCHAR},
            </if>
            <if test="occurTime != null">
                occur_time = #{occurTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteFaultRecordById">
        DELETE
        FROM fault_record
        WHERE record_id = #{id,jdbcType=VARCHAR}
    </delete>

    <select id="getTypeStatistics" resultType="org.hqu.elevatorManage.domain.vo.StatisticsVO">
        select
        fr.`type` AS name ,count(*) AS value
        from fault_record AS fr
        JOIN elevator AS e ON e.elevator_id = fr.elevator_id
        <where>
            <if test="unitId != null and unitId != ''">
                e.unit_id = #{unitId,jdbcType=VARCHAR},
            </if>
            <if test="maintainCompanyId != null and maintainCompanyId != ''">
                e.maintain_company_id = #{maintainCompanyId,jdbcType=VARCHAR},
            </if>
        </where>
        GROUP BY fr.`type`
    </select>
    <select id="getElevatorFaultStatistics" resultType="org.hqu.elevatorManage.domain.vo.StatisticsVO">
        select
        e.name AS name ,count(*) AS value
        from fault_record AS fr
        JOIN elevator AS e ON e.elevator_id = fr.elevator_id
        <where>
            <if test="unitId != null and unitId != ''">
                e.unit_id = #{unitId,jdbcType=VARCHAR},
            </if>
            <if test="maintainCompanyId != null and maintainCompanyId != ''">
                e.maintain_company_id = #{maintainCompanyId,jdbcType=VARCHAR},
            </if>
        </where>
        GROUP BY e.name
    </select>
</mapper>

